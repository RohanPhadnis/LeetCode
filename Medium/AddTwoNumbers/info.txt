PROBLEM NUMBER: 2

PROBLEM DESCRIPTION

You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list.

You may assume the two numbers do not contain any leading zero, except the number 0 itself.


Example 1:

Input: l1 = [2,4,3], l2 = [5,6,4]
Output: [7,0,8]
Explanation: 342 + 465 = 807.


Example 2:

Input: l1 = [0], l2 = [0]
Output: [0]
Example 3:

Input: l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]
Output: [8,9,9,9,0,0,0,1]


Constraints:

The number of nodes in each linked list is in the range [1, 100].
0 <= Node.val <= 9
It is guaranteed that the list represents a number that does not have leading zeros.


SOLUTION INFO
10/29/2022 13:28	Accepted	20 ms	7.6 MB	c
    Runtime: 20 ms, faster than 72.59% of C online submissions for Add Two Numbers.
    Memory Usage: 7.6 MB, less than 86.38% of C online submissions for Add Two Numbers.
10/29/2022 13:23	Accepted	128 ms	13.9 MB	python3
    Runtime: 128 ms, faster than 63.38% of Python3 online submissions for Add Two Numbers.
    Memory Usage: 13.9 MB, less than 86.24% of Python3 online submissions for Add Two Numbers.
